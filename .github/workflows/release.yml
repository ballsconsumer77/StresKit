name: Create release
run-name: Create release

on:
  push:
    branches:
      - main
    paths:
      # step "Generate changelog" relies on "urls.json" being the only path specified here
      - "urls.json"

  workflow_dispatch:
    inputs:
      version:
        description: "Version of the ISO to build. This will be used for the tag and release name."

      pre-release:
        description: "Pre-release"
        required: true
        default: false
        type: boolean

permissions:
  contents: write

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install packages
        run: |
          sudo apt update
          sudo apt install -y mkisofs

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: 3.12.1

      - name: Install dependencies
        run: python -m pip install -r requirements.txt

        # uses commit message on urls.json github-actions[bot] push event for changelog
      - name: Generate changelog
        id: generate-changelog
        run: |
          response=$(curl -s "https://api.github.com/repos/amitxv/StresKit/commits")
          commit_message=$(echo "$response" | jq -r '.[0].commit.message')
          committer_name=$(echo "$response" | jq -r '.[0].commit.committer.name')

          if [ "${{ github.event_name }}" == "push" ] && [ "$committer_name" == "github-actions[bot]" ]; then
            echo $commit_message >> changelog.md
          else
            touch changelog.md
          fi

      - name: Get desired StresKit version to build
        id: get-version
        run: |
          if [ -n "${{ inputs.version }}" ]; then
            echo "version=${{ inputs.version }}" >> $GITHUB_OUTPUT
          else
            tag=$(curl https://api.github.com/repos/${{ github.repository }}/releases/latest | grep -oP '"tag_name": "\K[^"]+')

            IFS='.' read -ra split_version <<< "$tag"

            major="${split_version[0]}"
            minor="${split_version[1]}"

            new_version="$major.$((minor + 1)).0"

            echo "version=$new_version" >> $GITHUB_OUTPUT
          fi

      - name: Build ISO
        run: python3 build.py --image-version ${{ steps.get-version.outputs.version }}

      - name: Create release
        uses: ncipollo/release-action@v1
        with:
          tag: ${{ steps.get-version.outputs.version }}
          name: StresKit v${{ steps.get-version.outputs.version }}
          prerelease: ${{ inputs.pre-release }}
          artifacts: StresKit-v${{ steps.get-version.outputs.version }}-x86_64.iso,sha256.txt
          generateReleaseNotes: true
          bodyFile: changelog.md
